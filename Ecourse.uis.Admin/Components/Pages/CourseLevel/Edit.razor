@page "/courselevel/edit/{Id}"
@using ECourse.Admin.Service.CourseAPI
@using Newtonsoft.Json
@inject NavigationManager navManager
@inject ICourseLevelService service;
@inject NotificationService NotificationService;
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@rendermode InteractiveServer

<Form PageTitle="Edit" model="@model" loading="@loading" OnValidSubmit="@Submit"></Form>
@code {
    [Parameter]
    public string Id { get; set; }
    public bool loading { get; set; } = false;
    CourseLevelDto model = new();
    protected override async Task OnParametersSetAsync()   
    {
        var response =await service.GetByIdAsync(Id);
        if (response != null)
        {
            model = JsonConvert.DeserializeObject<CourseLevelDto>(Convert.ToString(response.Result));
            //var test = response.Result;
        }
    }
    async Task Submit()
    {
        try
        {
            loading = true;
            var response = await service.UpdateAsync(model);
            if (response != null && response.IsSuccess)
            {
                loading = false;
                await LocalStorage.SetItemAsStringAsync("message", "update");
                navManager.NavigateTo("/courselevel/index");
            }
        }
        catch (Exception ex)
        {
            NotificationService.Notify(NotificationSeverity.Error, ex.Message);
            loading = false;
            StateHasChanged();
        }

    }
}
